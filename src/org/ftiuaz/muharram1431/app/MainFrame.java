/*
 * This source code was authorized by TomsProject.
 * Copyright (C) 2009 TomsProject.

 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * MainFrame.java
 *
 * Created on 27 Okt 09, 12:36:25
 */

package org.ftiuaz.muharram1431.app;

import java.awt.Component;
import java.awt.event.ActionListener;
import java.net.URL;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.help.CSH;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.help.HelpSetException;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.ftiuaz.muharram1431.app.dialog.AboutBox;
import org.ftiuaz.muharram1431.app.model.ClientGrant;
import org.ftiuaz.muharram1431.app.model.Clients;
import org.ftiuaz.muharram1431.app.model.SQLModel;
import org.ftiuaz.muharram1431.app.model.Transactions;
import org.ftiuaz.muharram1431.app.model.remote.RemoteClient;
import org.ftiuaz.muharram1431.app.model.remote.RemoteQuery;
import org.ftiuaz.muharram1431.app.model.remote.RemoteTransaction;
import org.ftiuaz.muharram1431.app.resources.connection.LogFile;
import org.ftiuaz.muharram1431.app.resources.connection.PathConfig;

/**
 *
 * @author maru
 */
public class MainFrame extends javax.swing.JFrame {
    private JDialog dialogAbout;
    private DefaultListModel listModel = new DefaultListModel();
    private Clients clients;
    private SQLModel sqlModel;
    private JInternalFrame frame;
    private JFileChooser fileChooser;
    
    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        //setWindowsTheme(MainFrame.this);
        confirmConfiguration();
        frame = new FrameEdit();
        desktopParent.add(frame, javax.swing.JLayeredPane.DEFAULT_LAYER);
        setLocationRelativeTo(null);
        sqlModel.connecting();
        serverRegistry();
        labelState.setText("Jumlah host client yang mendaftar: " + listModel.size() +
                ". Client sudah terdaftar: " + clients.sumClients());
    }

    private void confirmConfiguration() {
        int pilih = JOptionPane.showConfirmDialog(this, "Pilih file konfigurasi\n[Yes: lanjut & No: tutup]",
                "Setup", JOptionPane.YES_NO_OPTION);
        if(pilih == JOptionPane.YES_OPTION){
            fileChooser = new JFileChooser();
            if(fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
                PathConfig.getInstance().setPath(fileChooser.getSelectedFile().toURI().getPath().substring(1));
                sqlModel = new SQLModel(PathConfig.getInstance().getPath());
            }else{
                JOptionPane.showMessageDialog(null,
                    "Pengaturan server tidak lengkap, file konfigurasi belum ditentukan.\nAplikasi ditutup",
                    "Server Error", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
            }
        }else{
            JOptionPane.showMessageDialog(null,
                    "Pengaturan server tidak lengkap, file konfigurasi belum ditentukan.\nAplikasi ditutup",
                    "Server Error", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }

    private void fillListClients() {
        listModel.clear();
        if(clients.getHostClient() != null){
            for(int i = 0; i < clients.getHostClient().size(); i++)
                listModel.add(i, clients.getHostClient().get(i));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        buttonClients = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        buttonEdit = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        buttonAbout = new javax.swing.JButton();
        buttonHelp = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        buttonClose = new javax.swing.JButton();
        desktopParent = new javax.swing.JDesktopPane();
        frameClients = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listHost = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        textHost = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textMAC = new javax.swing.JTextField();
        buttonAccept = new javax.swing.JButton();
        buttonReject = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        labelState = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JServerMuharram");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        buttonClients.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ftiuaz/muharram1431/app/resources/clients.png"))); // NOI18N
        buttonClients.setToolTipText("Daftar Client");
        buttonClients.setFocusable(false);
        buttonClients.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonClients.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonClients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClientsActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonClients);
        jToolBar1.add(jSeparator1);

        buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ftiuaz/muharram1431/app/resources/edit.png"))); // NOI18N
        buttonEdit.setToolTipText("Edit Data");
        buttonEdit.setFocusable(false);
        buttonEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonEdit);
        jToolBar1.add(jSeparator2);

        buttonAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ftiuaz/muharram1431/app/resources/about.png"))); // NOI18N
        buttonAbout.setToolTipText("Keterangan");
        buttonAbout.setFocusable(false);
        buttonAbout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonAbout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAboutActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonAbout);

        buttonHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ftiuaz/muharram1431/app/resources/help.png"))); // NOI18N
        buttonHelp.setToolTipText("Bantuan");
        buttonHelp.setFocusable(false);
        buttonHelp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonHelp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonHelp.addActionListener(showHelpContents());
        jToolBar1.add(buttonHelp);
        jToolBar1.add(jSeparator3);

        buttonClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ftiuaz/muharram1431/app/resources/stop.png"))); // NOI18N
        buttonClose.setToolTipText("Tutup Aplikasi");
        buttonClose.setFocusable(false);
        buttonClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonClose.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });
        jToolBar1.add(buttonClose);

        desktopParent.setBackground(new java.awt.Color(153, 153, 255));
        desktopParent.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        frameClients.setClosable(true);
        frameClients.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        frameClients.setIconifiable(true);
        frameClients.setMaximizable(true);
        frameClients.setResizable(true);
        frameClients.setTitle("Daftar Client");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar host client"));

        listHost.setModel(listModel);
        listHost.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listHostValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listHost);

        jLabel1.setText("Host: ");

        jLabel2.setText("MAC: ");

        textMAC.setEditable(false);

        buttonAccept.setText("Terima");
        buttonAccept.setEnabled(false);
        buttonAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAcceptActionPerformed(evt);
            }
        });

        buttonReject.setText("Tolak");
        buttonReject.setEnabled(false);
        buttonReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRejectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textMAC, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(textHost, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonAccept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonReject)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textMAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonAccept)
                            .addComponent(buttonReject)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout frameClientsLayout = new javax.swing.GroupLayout(frameClients.getContentPane());
        frameClients.getContentPane().setLayout(frameClientsLayout);
        frameClientsLayout.setHorizontalGroup(
            frameClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameClientsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        frameClientsLayout.setVerticalGroup(
            frameClientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameClientsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        frameClients.setBounds(20, 10, 450, 230);
        desktopParent.add(frameClients, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ftiuaz/muharram1431/app/resources/logoFull.png"))); // NOI18N
        jLabel3.setBounds(0, 0, 360, 220);
        desktopParent.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        labelState.setText("State");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(desktopParent, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelState, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desktopParent, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelState))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
        sqlModel.disconnecting();
        System.exit(0);
    }//GEN-LAST:event_buttonCloseActionPerformed

    private void buttonAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAboutActionPerformed
        if(dialogAbout == null)
            dialogAbout = new AboutBox(this, true);
        dialogAbout.setVisible(true);
    }//GEN-LAST:event_buttonAboutActionPerformed

    private void buttonClientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClientsActionPerformed
        fillListClients();
        labelState.setText("Jumlah host client yang mendaftar: " + listModel.size() +
                ". Client sudah terdaftar: " + clients.sumClients());
        frameClients.setVisible(true);
    }//GEN-LAST:event_buttonClientsActionPerformed

    private void buttonAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAcceptActionPerformed
        if(!textMAC.getText().equals(""))
            acceptUserReg();
        else
            JOptionPane.showMessageDialog(this, "Pilih host client terlebih dahulu");
    }//GEN-LAST:event_buttonAcceptActionPerformed

    private void buttonRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRejectActionPerformed
        if(!textMAC.getText().equals("")){
            clients.getHostClient().remove(listHost.getSelectedIndex());
            listModel.remove(listHost.getSelectedIndex());
        }else
            JOptionPane.showMessageDialog(this, "Pilih host client terlebih dahulu");
    }//GEN-LAST:event_buttonRejectActionPerformed

    private void listHostValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listHostValueChanged
        if(listModel.size() != 0 && listHost.getSelectedValue() != null){
            textHost.setText(clients.getEnlistClients(listHost.getSelectedValue().toString()));
            textMAC.setText(listHost.getSelectedValue().toString());
            buttonAccept.setEnabled(true);
            buttonReject.setEnabled(true);
        }else{
            textHost.setText("");
            textMAC.setText("");
            buttonAccept.setEnabled(false);
            buttonReject.setEnabled(false);
        }
    }//GEN-LAST:event_listHostValueChanged

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        frame.setVisible(true);
    }//GEN-LAST:event_buttonEditActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAbout;
    private javax.swing.JButton buttonAccept;
    private javax.swing.JButton buttonClients;
    private javax.swing.JButton buttonClose;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonHelp;
    private javax.swing.JButton buttonReject;
    private javax.swing.JDesktopPane desktopParent;
    private javax.swing.JInternalFrame frameClients;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel labelState;
    private javax.swing.JList listHost;
    private javax.swing.JTextField textHost;
    private javax.swing.JTextField textMAC;
    // End of variables declaration//GEN-END:variables

    private void serverRegistry() {
        try {
            RemoteClient user = new Clients();
            RemoteTransaction transaction = new Transactions();
            RemoteQuery query = new ClientGrant();
            Registry registry = LocateRegistry.getRegistry();
            registry.rebind("client", user);
            registry.rebind("transaction", transaction);
            registry.rebind("query", query);
            clients = (Clients) user;
            JOptionPane.showMessageDialog(null, "Server OK", "Informasi", 
                    JOptionPane.INFORMATION_MESSAGE, new javax.swing.ImageIcon
                    (getClass().getResource(
                    "/org/ftiuaz/muharram1431/app/resources/about.png")));
        } catch (RemoteException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            LogFile.getInstance().record(LogFile.ERROR_APPS, MainFrame.class.getName() + ":\n" + ex.getMessage());
        }
    }

    private void acceptUserReg() {
        sqlModel.setDbModel(SQLModel.MS_USER);
        List list = sqlModel.requestQuery("SELECT id_user FROM ms_user WHERE id_user = '" +
                textMAC.getText() + "'");
        if(list.size() == 0){
            sqlModel.commandQuery("INSERT INTO ms_user VALUES('" + textMAC.getText()
                    + "', '" + textHost.getText() + "')");
            JOptionPane.showMessageDialog(this, sqlModel.getResultSQL());
            clients.getHostClient().remove(listHost.getSelectedIndex());
            listModel.remove(listHost.getSelectedIndex());
        }else
            JOptionPane.showMessageDialog(this, "User sudah terdaftar");
    }

    public void setWindowsTheme(Component component){
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            SwingUtilities.updateComponentTreeUI(component);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            LogFile.getInstance().record(LogFile.ERROR_APPS, MainFrame.class.getName() + ":\n" + ex.getMessage());
        } catch (InstantiationException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            LogFile.getInstance().record(LogFile.ERROR_APPS, MainFrame.class.getName() + ":\n" + ex.getMessage());
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            LogFile.getInstance().record(LogFile.ERROR_APPS, MainFrame.class.getName() + ":\n" + ex.getMessage());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            LogFile.getInstance().record(LogFile.ERROR_APPS, MainFrame.class.getName() + ":\n" + ex.getMessage());
        }
    }

    public ActionListener showHelpContents() {
        String path = "org/ftiuaz/muharram1431/help/toms.hs";
        ClassLoader loader = this.getClass().getClassLoader();
        HelpSet hs = null;
        URL hsURL = HelpSet.findHelpSet(loader, path);
        try {
            hs = new HelpSet(loader, hsURL);
        } catch (HelpSetException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        HelpBroker hb = hs.createHelpBroker();
        return new CSH.DisplayHelpFromSource(hb);
    }
}